openapi: 3.2.0
info:
  title: Cosmo Cats API
  description: API contract for Product entity (Cosmo Cats Intergalactic Marketplace)
  version: 1.0.0
servers:
  - url:
paths:
  /api/v1/products:
    get:
      summary: Get list of products
      tags: [Products]
      responses:
        "200":
          description: Product list returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductListDto"
    post:
      summary: Create a new product
      tags: [Products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductDto"
      responses:
        "201":
          description: Product created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDto"
        "400":
          description: Validation error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /api/v1/products/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Get product by id
      tags: [Products]
      responses:
        "200":
          description: Product found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDto"
        "404":
          description: Product not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
    put:
      summary: Update product by id
      tags: [Products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductDto"
      responses:
        "200":
          description: Product updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDto"
        "400":
          description: Validation error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
    delete:
      summary: Delete product by id
      tags: [Products]
      responses:
        "204":
          description: Deleted

components:
  schemas:
    ProductDto:
      type: object
      required: [name, price, categoryId]
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          minLength: 3
          maxLength: 100
          description: Product name. Must contain cosmic word (e.g., "star", "galaxy") - validated on backend.
        description:
          type: string
          maxLength: 1000
        price:
          type: number
          format: double
          minimum: 0.01
          description: Price in interstellar credits (must be > 0)
        currency:
          type: string
          maxLength: 5
          example: "CRD"
        sku:
          type: string
          pattern: '^[A-Z0-9\-]{3,30}$'
          description: Stock keeping unit
        categoryId:
          type: integer
        tags:
          type: array
          items:
            type: string
    ProductListDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProductDto"
        total:
          type: integer
    ParamsViolationDetails:
      type: object
      properties:
        fieldName:
          type: string
        reason:
          type: string
    ProblemDetails:
      type: object
      description: RFC 9457 Problem Details (application/problem+json)
      properties:
        type:
          type: string
          format: uri
          example: "https://cosmocats.example.com/problems/validation-error"
        title:
          type: string
          example: "Validation Failed"
        status:
          type: integer
          example: 400
        detail:
          type: string
          example: "Validation failed for object 'ProductDto': price must be > 0"
        instance:
          type: string
          format: uri
          example: "/api/v1/products"
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ParamsViolationDetails"
